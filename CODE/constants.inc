

/*
                        SMS CONSTANTS
*/
.DEFINE CONTROLPORT1    $DC
.DEFINE CONTROLPORT2    $DD
.DEFINE IO_CONTROL      $3F
.DEFINE PSG_PORT        $7F
.DEFINE STACK_PTR       $DFF0
;   VDP
.DEFINE VDPCON_PORT     $BF
.DEFINE VDPDATA_PORT    $BE
.DEFINE VRAMWRITE       $4000
.DEFINE CRAMWRITE       $C000
    ; REGS
.DEFINE VDP_R01_DISPLAY     $40
.DEFINE VDP_R01_FRAMEINTS   $20
    ; READ
.DEFINE VDPCONT_VBLANK  $07
    ; SIZES
.DEFINE BG_CRAM_SIZE    $10
.DEFINE SPR_CRAM_SIZE   $10
.DEFINE CRAM_SIZE       BG_CRAM_SIZE + SPR_CRAM_SIZE
.DEFINE VRAM_SIZE       $4000   ; 16KB
.DEFINE TILE_SIZE       $20
.DEFINE MAP_TILE_SIZE   $02
;   VRAM
.DEFINE SPRITE_ADDR     $0000
.DEFINE BACKGROUND_ADDR $2000
.DEFINE MAZETEXT_ADDR   $3000 + (4 * $20)
.DEFINE HUDTEXT_ADDR    $3480 + (6 * $20)
.DEFINE NAMETABLE       $3800
.DEFINE SPRITE_TABLE    $3F00
.DEFINE SPRITE_TABLE_XN SPRITE_TABLE + $80


;   MAPPER
.DEFINE MAPPER_RAM          $FFFC    
.DEFINE MAPPER_SLOT0        $FFFD
.DEFINE MAPPER_SLOT1        $FFFE
.DEFINE MAPPER_SLOT2        $FFFF



; GRAPHICAL CONSTS
.DEFINE EMPTY_PTR           sprPalData
.DEFINE BGCONST_IDX         $09
.DEFINE HUD_SIZE            $05 * MAP_TILE_SIZE
.DEFINE SPR_DISABLE         $D0
.DEFINE PLAYER_TEXT_SIZE    $09 * MAP_TILE_SIZE
.DEFINE READY_TEXT_SIZE     $05 * MAP_TILE_SIZE
.DEFINE GOVER_TEXT_SIZE     $08 * MAP_TILE_SIZE


; IO CONTROL BITS
.ENUM $00
    P1_TR_DIR   DB
    P1_TH_DIR   DB
    P2_TR_DIR   DB
    P2_TH_DIR   DB
    P1_TR_LVL   DB
    P1_TH_LVL   DB
    P2_TR_LVL   DB
    P2_TH_LVL   DB
.ENDE


/*
                    STATE MACHINE CONSTANTS
*/

;   MAIN GAME MODE STATES
.ENUM $00
    M_STATE_ATTRACT     DB
    M_STATE_GAMEPLAY    DB
    M_STATE_CUTSCENE    DB
.ENDE

;   ATTRACT MODE SUB STATES
.ENUM $00
    ATTRACT_TITLE       DB
    ATTRACT_READY01     DB
    ATTRACT_NORMAL      DB
    ATTRACT_DEAD00      DB
    ATTRACT_DEAD01      DB
    ATTRACT_DEAD02      DB
    ATTRACT_OPTIONS     DB
    ATTRACT_INTRO       DB
    ATTRACT_GAMEOVER    DB
    ATTRACT_MSINTRO     DB
.ENDE

;   GAMEPLAY MODE SUB STATES
.ENUM $00
    GAMEPLAY_READY00    DB
    GAMEPLAY_READY01    DB
    GAMEPLAY_NORMAL     DB
    GAMEPLAY_DEAD00     DB
    GAMEPLAY_DEAD01     DB
    GAMEPLAY_DEAD02     DB
    GAMEPLAY_COMP00     DB
    GAMEPLAY_COMP01     DB
    GAMEPLAY_GAMEOVER   DB
.ENDE



/*
                    ATTRACT SUB-STATES CONSTANTS
*/
    .DEFINE TITLE_TIMER_LEN     600     ; 10 SECONDS
    .DEFINE ATT00_TIMER_LEN     60      ; 1 SECOND
    .DEFINE ATT01_TIMER_LEN     30      ; 0.5 SECOND
    .DEFINE ATT_PAC_SPEED00     288
    .DEFINE ATT_GHO_SPEED00     304
    .DEFINE ATT_GHO_SPEED01     $FF70
    .DEFINE ATT_PAC_SPEED01     $FEE0

/*
                    GAMEPLAY SUB-STATES CONSTANTS
*/
    .DEFINE READY00_TIMER_LEN   $8A     ; 2 SECONDS AND 18 FRAMES
    .DEFINE READY01_TIMER_LEN   $78     ; 2 SECONDS
    .DEFINE EAT_TIMER_LEN       $78     ; 1 SECOND (TIMER IS UPDATED TWICE PER FRAME)
    .DEFINE LVLC00_TIMER_LEN    $78     ; 2 SECONDS
    .DEFINE DEAD00_TIMER_LEN    $3C     ; 1 SECOND
    .DEFINE DEAD01_TIMER_LEN    $1E     ; 0.5 SECONDS
    .DEFINE DEAD02_TIMER_LEN    $A8     ; 2.5 SECONDS???
    .DEFINE GOVER_TIMER_LEN     $78     ; 2 SECONDS
    .DEFINE GHOST_FLASH_TIME    $100    ;
    .DEFINE FRUIT_TIME          600     ; 10 SECONDS (TIMER IS UPDATED TWICE PER FRAME)
    .DEFINE POINT_TIME          120     ; 2 SECONDS (TIMER IS UPDATED TWICE PER FRAME)
    .DEFINE POW_DOT_CYCLE_TIMER 10
    .DEFINE MAZE_FLASH_TIMER    $0C     ; 12 FRAMES


/*
                    CUTSCENE SUB-STATES CONSTANTS
*/
    .DEFINE CUT00_TIMER_LEN     60  ; 1 SECOND
    .DEFINE CUT01_TIMER_LEN     30  ; .5 SECOND
    .DEFINE CUT02_TIMER_LEN     120 ; 2 SECONDS

    .DEFINE CUT_PAC_SPEED00     320     ; 320
    .DEFINE CUT_PAC_SPEED01     $FEC0   ; -320

    .DEFINE CUT_GHO_SPEED00     336     ; 336
    .DEFINE CUT_GHO_SPEED01     $FF40   ; -192
    .DEFINE CUT_GHO_SPEED02     48
    .DEFINE CUT_GHO_SPEED03     $FEB0   ; -336

/*
                    DIRECTIONS
*/
.ENUM $00
    DIR_UP       DB
    DIR_LEFT     DB
    DIR_DOWN     DB
    DIR_RIGHT    DB
.ENDE



;   CONTROLLER
;   PORT $DC
.ENUM $00
    P1_DIR_UP       DB
    P1_DIR_DOWN     DB
    P1_DIR_LEFT     DB
    P1_DIR_RIGHT    DB
    P1_BTN_1        DB
    P1_BTN_2        DB
    P2_DIR_UP       DB
    P2_DIR_DOWN     DB     
.ENDE

;   CONTROLLER
;   PORT $DD
.ENUM $00
    P2_DIR_LEFT     DB
    P2_DIR_RIGHT    DB
    P2_BTN_1        DB
    P2_BTN_2        DB
    RESET_BTN       DB
    CONT            DB
    P1_TH           DB
    P2_TH           DB
.ENDE


;   BANKS
.ENUM $00
    CODE_BANK   DB
    HEADER_BANK DB
    SMOOTH_BANK DB
    ARCADE_BANK DB
    RNG_BANK    DB
.ENDE

/*
                    GAME
*/

.DEFINE RESET_WORD_0    $1980
.DEFINE RESET_WORD_1    $4843   ; "HC"

;   PLUS BIT FLAGS
.ENUM $00
    PLUS    DB  ; PLUS VARIANT FLAG
    MS_PAC  DB  ; MS PAC-MAN FLAG
    STYLE_0 DB  ; STYLE (0 - "SMOOTH", 1 - "ARCADE")
    NOP0    DB
    NOP2    DB
    NOP3    DB
    NOP4    DB
    INVISIBLE_MAZE  DB
.ENDE


;   PAUSE CONTROL
.ENUM $00
    PAUSE_REQ   DB
    UNPAUSE_REQ DB
    NEW_PAUSE   DB
.ENDE

;   PLAYER CONTROL
.ENUM $00
    PLAYER_MODE DB
    CURR_PLAYER DB
.ENDE


;   ACTOR
.ENUM $00
    SUBPIXEL    DB
    X_WHOLE     DB
    Y_WHOLE     DB
    CURR_DIR    DB
    NEXT_DIR    DB
    REVE_DIR    DB
    SPR_NUM     DB
    NEW_STATE_FLAG  DB
    STATE       DB
;   COLLISION TILES
    UP_X db  
    UP_Y db        
    UP_ID db
    LEFT_X db  
    LEFT_Y db        
    LEFT_ID db
    DOWN_X db  
    DOWN_Y db        
    DOWN_ID db
    RIGHT_X db  
    RIGHT_Y db        
    RIGHT_ID db
    CURR_X db  
    CURR_Y db        
    CURR_ID db
    NEXT_X db  
    NEXT_Y db        
    NEXT_ID db
    TARGET_X DB
    TARGET_Y DB
    TARGET_ID DB
.ENDE

;   GHOST
.ENUM _sizeof_actor
    SPD_PATT_NORM_00    DB
    SPD_PATT_NORM_01    DB
    SPD_PATT_NORM_02    DB
    SPD_PATT_NORM_03    DB
    SPD_PATT_SCARED_00    DB
    SPD_PATT_SCARED_01    DB
    SPD_PATT_SCARED_02    DB
    SPD_PATT_SCARED_03    DB
    SPD_PATT_SLOW_00    DB
    SPD_PATT_SLOW_01    DB
    SPD_PATT_SLOW_02    DB
    SPD_PATT_SLOW_03    DB
    REVE_FLAG   DB
    DOT_COUNTER DB
    ALIVE_FLAG  DB
    EDIBLE_FLAG DB
    ID          DB
    INVISIBLE_FLAG  DB
.ENDE


/*
            SPRITE PALETTE INDEXES
*/

.ENUM $00
    BGPAL_TRANS     DB
    BGPAL_WALLS     DB
    BGPAL_INSIDE    DB
    BGPAL_SHADE0    DB
    BGPAL_SHADE1    DB
    BGPAL_SHADE2    DB
    BGPAL_GATE      DB
    BGPAL_DOT0      DB
    BGPAL_DOT1      DB
    BGPAL_DOT2      DB
    BGPAL_PDOT0     DB
    BGPAL_PDOT1     DB
    BGPAL_PDOT2     DB
    BGPAL_PDOT3     DB
    BGPAL_TEXT      DB
    BGPAL_MASK      DB
.ENDE

.DEFINE CLR_RED     $03
.DEFINE CLR_YELLOW  $0F
.DEFINE CLR_CYAN    $3C

/*
                    TILE/SPRITE POINTS
*/
.DEFINE MIDTILE_X       $02
.DEFINE MIDTILE_Y       $03
.DEFINE MIDSPRITE_X     $05
.DEFINE MIDSPRITE_Y     $06
.DEFINE X_OFFSET        $04

/*
                    VISUAL OFFSETS
*/
.DEFINE READY_TEXT_ROW0     ($0A * $02) + ($0C * $40)
.DEFINE READY_TEXT_ROW1     ($0A * $02) + ($0D * $40)
.DEFINE PLAYER_TEXT         ($08 * $02) + ($08 * $40)
.DEFINE GOVER_TEXT_ROW0     ($08 * $02) + ($0C * $40)
.DEFINE GOVER_TEXT_ROW1     ($08 * $02) + ($0D * $40)

.DEFINE HIGHSCORE_TEXT_ROW0 (25 * $02) + ($02 * $40)
.DEFINE HIGHSCORE_TEXT_ROW1 (26 * $02) + ($03 * $40)
.DEFINE XUP_TEXT            (25 * $02) + ($06 * $40)

.DEFINE HSNUM_TEXT          (25 * $02) + ($04 * $40)
.DEFINE NUM_TEXT            (25 * $02) + ($08 * $40)


/*
                VRAM TILE OFFSETS
*/
.DEFINE FRUIT_VRAM      TILE_SIZE       ; START AT TILE 1      
.DEFINE PAC_VRAM        FRUIT_VRAM  + (32 * TILE_SIZE)
.DEFINE GHOST_VRAM      PAC_VRAM    + (40 * TILE_SIZE)
.DEFINE FSCORE_VRAM     GHOST_VRAM  + (72 * TILE_SIZE)
.DEFINE GSCORE_VRAM     FSCORE_VRAM + (12 * TILE_SIZE)
.DEFINE DEATH_VRAM      GSCORE_VRAM + (08 * TILE_SIZE)
.DEFINE SCARED_VRAM     GHOST_VRAM  + (48 * TILE_SIZE)
.DEFINE EYES_VRAM       SCARED_VRAM + (16 * TILE_SIZE)
.DEFINE GHOST_CUT_VRAM          $C0 * TILE_SIZE
.DEFINE PAC_CUT_VRAM            $DE * TILE_SIZE
.DEFINE MS_CUT_PAC_VRAM         DEATH_VRAM

.DEFINE MAZETXT_INDEX           $EA
.DEFINE MAZETXT_VRAM            MAZETXT_INDEX * TILE_SIZE


;   FRUIT           (32)
;   (MS.) PAC-MAN   (40)
;   -------------------------------


;   -----------PAC-MAN-------------
;   GHOSTS          (72)
;   FRUIT POINTS    (12)
;   GHOST POINTS    (8)
;   PAC-MAN DEATH

;   -----------PAC-MAN-------------
;   GHOSTS          (72)
;   CUTSCENE DATA


;   ----------MS.PAC-MAN-----------
;   GHOSTS          (72)
;   FRUIT POINTS    (12)
;   GHOST POINTS    (8)

;   ----------MS.PAC-MAN-----------
;   PAC-MAN         (40)
;   CUTSCENE DATA



/*
                    PAC-MAN CONSTANTS
*/
;   STATES
.ENUM $00
    PAC_NORMAL  DB
    PAC_SUPER   DB
    PAC_DEAD    DB
    PAC_BIG     DB  ; 1ST CUTSCENE ONLY
.ENDE


/*
                GHOST CONSTANTS
*/
;   STATES
.ENUM $00
    GHOST_SCATTER   DB
    GHOST_GOTOHOME  DB      ; DEAD
    GHOST_GOTOCENTER    DB  ; DEAD
    GHOST_GOTOREST  DB      ; DEAD (INKY, CLYDE)
    GHOST_REST      DB      ; PINKY, INKY, CLYDE
    GHOST_GOTOEXIT  DB
.ENDE



/*
    MAZE CONSTS
*/
.DEFINE MAZE_COLMAP_SIZE    496
.DEFINE MAZE_TILEMAP_SIZE   $600



/*
    SOUND CONSTS
*/
.ENUM $00
    VOLUME DB
    NOTE DB
    DURATION DB
    POINTER_00 DB
    POINTER_01 DB
    CHAN_CONTROL    DB
    DETUNE DB
    NOTE_DISPLACE   DB
    DUR_COUNTER     DB
    START_PTR_00    DB
    START_PTR_01    DB
    START_VOLUME    DB
    ENVELOPE        DB
    ENVELOPE_IDX    DB
    FREQ_00         DB
    FREQ_01         DB
    SND_ID          DB
.ENDE